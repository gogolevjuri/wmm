name: Auto Tag

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get current tag
        id: current-tag
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "none")
          echo "current-tag=${TAG}" >> $GITHUB_ENV

      - name: Calculate new tag
        id: new-tag
        run: |
          CURRENT_TAG=${{ env.current-tag }}
          if [ "$CURRENT_TAG" = "none" ]; then
            NEW_TAG="1.1.2.1"
          else
            MAJOR=$(echo $CURRENT_TAG | cut -d. -f1)
            MINOR=$(echo $CURRENT_TAG | cut -d. -f2)
            PATCH=$(echo $CURRENT_TAG | cut -d. -f3)
            BUILD=$(echo $CURRENT_TAG | cut -d. -f4)
            NEW_BUILD=$((BUILD + 1))
            NEW_TAG="${MAJOR}.${MINOR}.${PATCH}.${NEW_BUILD}"
          fi
          echo "new-tag=${NEW_TAG}" >> $GITHUB_ENV

      - name: Check if new tag exists
        id: tag-exists
        run: |
          git fetch --tags
          if git rev-parse "refs/tags/${{ env.new-tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV

      - name: Create and push new tag
        if: env.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ env.new-tag }}
          git push origin ${{ env.new-tag }}
